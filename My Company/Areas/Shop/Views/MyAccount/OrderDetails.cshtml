@model My_Company.Areas.Shop.ViewModels.Order.OrderDefailsViewModel

@using static My_Company.Helpers.Constants
@inject My_Company.Interfaces.IConfig config;
@inject My_Company.Interfaces.IRepositoryWrapper repo;

@{
    ViewData["Title"] = "Zamówienie nr" + Model.Id;
}

<div class="container">
    <ol class="breadcrumb bg-transparent justify-content-center">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Strona Główna</a></li>
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="MyAccount">Strefa klienta</a></li>
        <li class="breadcrumb-item active" aria-current="page">Szczegóły zamówienia</li>
    </ol>
    <div class="text-center">
        <h6 class="display-4">Szczegóły zamówienia</h6>
        <small>
            <i>
                Zamówienie nr <b>@Html.DisplayFor(m => m.Id) </b>z dnia <b>@Html.DisplayFor(m => m.OrderDate) </b>
                ma aktualnie status <b>@Html.DisplayFor(m => m.Status) </b>
            </i>
        </small>
    </div>
    <div>
        <div class="d-lg-block d-none my-3">
            <table class="table">
                <thead>
                    <tr class="table-light">
                        <th class="text-uppercase text-center">@Html.DisplayNameFor(m => m.Products[0].Name)</th>
                        <th class="text-uppercase text-center">@Html.DisplayNameFor(m => m.Products[0].OneItemPrice)</th>
                        <th class="text-uppercase text-center">@Html.DisplayNameFor(m => m.Products[0].Quantity)</th>
                        <th class="text-uppercase text-center">@Html.DisplayNameFor(m => m.Products[0].Price)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Products)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center justify-content-center">
                                    <img class="cartDetailsImg" src="@(item.Photo == null ? Url.Content(ImagePlaceholder) : Url.Content(item.Photo))"
                                         alt="@item.Name" />
                                    <div class="pl-3">
                                        <a asp-action="Details" asp-controller="Products" asp-route-id="@item.Id">
                                            <h6 class="font-weight-bold text-dark">@Html.DisplayFor(m => item.Name)</h6>
                                        </a>
                                    </div>
                                </div>
                            </td>
                            <td class="align-middle text-center">@Html.DisplayFor(m => item.OneItemPrice)</td>
                            <td class="align-middle text-center">
                                <span>@Html.DisplayFor(m => item.Quantity) </span>
                            </td>
                            <td class="align-middle text-center price">@Html.DisplayFor(m => item.Price)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-lg-none my-3">
            <table class="table">
                <tr class="table-light">
                    <th class="text-uppercase text-center">@Html.DisplayNameFor(m => m.Products[0].Name)</th>
                </tr>
                @foreach (var item in Model.Products)
                {
                    <tr>
                        <td>
                            <div class="d-flex justify-content-between">
                                <div class="d-flex align-items-center">
                                    <img class="imageCart" src="@(item.Photo == null ? Url.Content(ImagePlaceholder) : Url.Content(item.Photo))"
                                         alt="@item.Name" />
                                    <div class="pl-3">
                                        <a asp-action="Details" asp-controller="Products" asp-route-id="@item.Id">
                                            <h6 class="font-weight-bold text-dark">@Html.DisplayFor(m => item.Name)</h6>
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <h6 class="text-muted font-weight-lighter">@Html.DisplayNameFor(m => item.OneItemPrice): @Html.DisplayFor(m => item.OneItemPrice)</h6>
                            <h6 class=" font-weight-lighter">
                                @Html.DisplayNameFor(m => item.Quantity):
                                <span class=" text-muted">@Html.DisplayFor(m => item.Quantity) </span>
                            </h6>
                            <h6>@Html.DisplayNameFor(m => item.Price): <span class="price">@Html.DisplayFor(m => item.Price)</span></h6>
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div class="text-right">
            <h4>@Html.DisplayNameFor(m => m.Total): <b>@Html.DisplayFor(m => m.Total)</b></h4>
        </div>
        <div class="row mt-2">
            <div class="col-12 col-md-6 col-lg-4 d-flex flex-column">
                <h4>@Html.DisplayNameFor(m => m.DeliveryType)</h4>
                <div class="p-4 mt-3 border border-secondary flex-grow-1">
                    <h5 class="p-0">@Html.DisplayFor(m => m.DeliveryTypeString)</h5>
                    <small class="text-muted">@Html.DisplayFor(m => m.DeliveryPrice)</small>
                    @if (Model.DeliveryType == My_Company.EnumTypes.DeliveryType.PaczkomatyInPost)
                    {
                        <h5 class="text-muted">Wybrany paczkomat:</h5>
                        <p class="p-0 m-0">@Html.DisplayFor(m => m.Delivery.ParcelLockerInfo.Name)</p>
                        <p class="p-0 m-0">@Html.DisplayFor(m => m.Delivery.ParcelLockerInfo.Address.Line1)</p>
                        <p class="p-0 m-0">@Html.DisplayFor(m => m.Delivery.ParcelLockerInfo.Address.Line2)</p>
                    }
                    else if (Model.DeliveryType == My_Company.EnumTypes.DeliveryType.PersonalPickup)
                    {
                        var address = await config.GetPersonalPickupAddress(repo.ConfigRepository);
                        <h5>Miejsce odbioru :</h5>
                        <p class="p-0 m-0">@address.Street</p>
                        <p class="p-0 m-0">@address.ZipCode @address.City</p>
                        <p class="p-0 m-0">tel. @address.PhoneNumber</p>
                    }
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-4 d-flex flex-column">
                <h4>@Html.DisplayNameFor(m => m.PaymentMethodString)</h4>
                <div class="p-4 mt-3 border border-secondary flex-grow-1">
                    <h5 class="p-0">@Html.DisplayFor(m => m.PaymentMethodString)</h5>
                    <small class="text-muted">@Html.DisplayFor(m => m.PaymentPrice)</small>
                    @{
                        var dataToPayment = await config.GetDataToPayment(repo.ConfigRepository);
                    }
                    @if (Model.PaymentMethod == My_Company.EnumTypes.PaymentMethodEnum.TraditionalTransfer)
                    {
                        <h5>Dane do zapłaty:</h5>
                        <div class="p-0"><small class="text-muted">Nazwa firmy: </small>@dataToPayment.CompanyName</div>
                        <div class="p-0"><small class="text-muted">Bank: </small>@dataToPayment.BankName</div>
                        <div class="p-0"><small class="text-muted">Numer Konta: </small>@dataToPayment.AccountNumber</div>
                    }
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-4 d-flex flex-column">
                <h4>Adres</h4>
                <div class="p-4 mt-3 border border-secondary flex-grow-1">
                    <div>
                        <span class="p-0">@Html.DisplayFor(m => m.Address.FirstName) @Html.DisplayFor(m => m.Address.LastName)</span>
                    </div>
                    <div>
                        <small>@Html.DisplayFor(m => m.Address.Street)</small>
                    </div>
                    <div>
                        <small>@Html.DisplayFor(m => m.Address.ZipCode) @Html.DisplayFor(m => m.Address.City)</small>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-between my-2">
            <a class="btn btn-link text-secondary text-uppercase" asp-action="Index" asp-controller="MyAccount"><i class="bi bi-arrow-left-short"></i> Wróć </a>
            <a class="btn btn-outline-dark text-uppercase" href="#" data-id="@Model.Id" id="getInvoice" style="border-radius:1px"><i class="bi bi-file-arrow-down"></i> Pobierz fakturę </a>

        </div>
    </div>

</div>
<style>
    .cartDetailsImg {
        width: 15vw;
        height: 20vh;
        object-fit: scale-down
    }
</style>

@section Scripts {
    <script src="~/js/Shop/MyAccount/OrderDetails/OrderDetails.js"></script>
}