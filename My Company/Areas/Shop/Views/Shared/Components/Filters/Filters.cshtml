@model List<My_Company.Models.Attribute>
@using My_Company.EnumTypes
<div class="filters">
    <h6>Cena</h6>
    <div class="row">
        <div class="col">
            <input type="text" class="form-control form-control-sm" placeholder="Od" id="priceFrom">
        </div>
        <b>-</b>
        <div class="col">
            <input type="text" class="form-control form-control-sm" placeholder="Do" id="priceTo">
        </div>
    </div>
    <hr />
    <div class="row">
        @for (var i = 0; i < Model.Count; i++)
        {
            <div class="col-12">
                @if (Model[i].Type != AttributeType.Bool)
                {<h6>@Model[i].Name</h6>}
                <input type="hidden" class="type" data-id="@Model[i].Id" value="@Model[i].Type" />
                @switch (Model[i].Type)
                {
                    case AttributeType.Bool:
                    <div class="form-check my-2">
                        <input type="checkbox" value="true" data-id="@Model[i].Id" class="form-check-input checkBoxAttribute">
                        <label class="form-check-label">@Html.DisplayFor(m => m[i].Name)</label>
                    </div>
                    break;
                    case AttributeType.Date:
                    <div class="row">
                        <div class="col-12 form-group">
                            <input type="text" data-id="@Model[i].Id" class="form-control form-control-sm dateFromAttribute" placeholder="od" onfocus="(this.type='date')" onblur="if(this.value==''){this.type='text'}" name="Attributes[@i].ValueFrom" />
                        </div>

                        <div class="col-12 form-group">
                            <input type="text" data-id="@Model[i].Id" class="form-control form-control-sm dateToAttribute" placeholder="do" onfocus="(this.type='date')" onblur="if(this.value==''){this.type='text'}" name="Attributes[@i].ValueTo" />
                        </div>
                    </div>
                    break;
                    case AttributeType.Dictionary:
                    @foreach (var value in Model[i].AttributeDictionaryValues)
                    {
                        <div class="form-check">
                            <input type="checkbox" data-id="@Model[i].Id" class="form-check-input dictionary-attribute" value="@value.Value">
                            <label class="form-check-label">@Html.DisplayFor(m => value.Value)</label>
                        </div>
                    }
                    break;
                    case AttributeType.Numeric:
                    <div class="row">
                        <div class="col">
                            <input type="number" data-id="@Model[i].Id" class="form-control form-control-sm numericFromAttribute" placeholder="Od">
                        </div>
                        <b>-</b>
                        <div class="col">
                            <input type="number" data-id="@Model[i].Id" class="form-control form-control-sm numericToAttribute" placeholder="Do">
                        </div>
                    </div>
                    break;
                    case AttributeType.Text:
                    <div class="form-group">
                        <input type="text" class="form-control form-control-sm text-attribute" placeholder="Szukaj" data-id="@Model[i].Id">
                    </div>
                    break;

                }

                <hr />
            </div>
        }
        <button class="m-3 btn btn-outline-dark btn-block" id="resetFiltersBtn" type="button">Wyczyść filtry</button>
    </div>

</div>
