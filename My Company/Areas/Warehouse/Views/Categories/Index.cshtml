@{
    ViewData["Title"] = "Kategorie";
}

<h1>Kategorie</h1>

<p>
    <a asp-action="Create">Dodaj kategorię</a>
</p>
<div class="row ">
    <div class="col-sm-12 col-md-4 ">
        <div class="input-group my-2">
            <input type="text" class="form-control" id="searchValue" placeholder="Szukaj">
            <div class="input-group-append">
                <button class="btn btn-outline-primary" id="searchBtn" type="button"><i class="bi bi-search"></i></button>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-4">
        <div class="input-group my-2">
            <select class="form-control" id="sortSelect">
                <option selected value="0">Sortowanie</option>
                <option value="1">Nazwa od A do Z</option>
                <option value="2">Nazwa od Z do A</option>
            </select>
        </div>
    </div>
</div>


<div class="spinner spinner-border spinnerHidden text-primary"></div>
<div id="table">
    @await Component.InvokeAsync("CategoriesList", new My_Company.Areas.Warehouse.ViewModels.CategoryListFilters())
</div>


@section Scripts{
    <script src="~/js/shared/shared.js"></script>
    <script src="~/js/Warehouse/Categories/Index/Index.js">

    </script>
}

@await Component.InvokeAsync("DeleteCategoryModal")

<div class="alert alert-danger alert-dismissible fade hide" role="alert">
    <h5 class="alert-content">Wystąpił problem</h5>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>