@model My_Company.Areas.Warehouse.ViewModels.ProductDetailsViewModel
@using My_Company.EnumTypes;

@{
    ViewData["Title"] = Model.Name + " - Szczegóły";
}

<div>
    <h1 class="display-4">@Html.DisplayFor(model => model.Name)</h1>

    <ul class="nav nav-pills justify-content-center" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" id="basicInfo-tab" data-toggle="tab" href="#basicInfo" role="tab" aria-controls="basicInfo" aria-selected="true">Informacje podstawowe</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="description-tab" data-toggle="tab" href="#description" role="tab" aria-controls="description" aria-selected="false">Opis</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="attributes-tab" data-toggle="tab" href="#attributes" role="tab" aria-controls="attributes" aria-selected="false">Atrybuty</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="photos-tab" data-toggle="tab" href="#photos" role="tab" aria-controls="photos" aria-selected="false">Zdjęcia</a>
        </li>
    </ul>


    <div class="tab-content mb-md-5">
        <div class="tab-pane fade show active" id="basicInfo" role="tabpanel" aria-labelledby="basicInfo-tab">
            <div class="row my-2">
                <div class="col-md-6 border-right border-success">
                    <div class="row">
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.Name)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.Name)</span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.EANCode)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.EANCode)</span>
                                <barcode code="@Model.EANCode"></barcode>
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.Supplier)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.Supplier)</span>
                                
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.Category)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.Category)</span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.Status)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.Status)</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">

                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.NettoPrice)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.NettoPrice)</span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.VATRate)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.VATRate)</span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.Demand)</small></span>
                            </div>
                            <div>
                                <span>@Html.DisplayFor(m => m.Demand)</span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div>
                                <span><small class="text-muted">@Html.DisplayNameFor(m => m.MagazineCount)</small></span>
                            </div>
                            <div>
                                <span class="@(Model.MagazineCount <= Model.Demand ? "text-danger" : "")">@Html.DisplayFor(m => m.MagazineCount)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="description" role="tabpanel" aria-labelledby="description-tab">
            @Html.Raw(Model.Description)
        </div>
        <div class="tab-pane fade" id="attributes" role="tabpanel" aria-labelledby="attributes-tab">
            <div class="row my-2">
                @{
                    var j = Model.Attributes.Count / 2;
                    var modulo = Model.Attributes.Count % 2;
                    int iterations = 0;
                }
                <div class="col-md-6 border-right border-success">
                    <div class="row">
                        @for (int i = 0; i < (modulo == 0 ? j : j + 1); i++)
                        {
                            <div class="col-12">
                                <div>
                                    <span><small class="text-muted">@Model.Attributes[i].Name</small></span>
                                </div>
                                <div>
                                    <span>@Model.Attributes[i].Value</span>
                                </div>
                            </div>
                            {
                                iterations++;
                            }

                        }
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        @for (int i = iterations; i < Model.Attributes.Count; i++)
                        {
                            <div class="col-12">
                                <div>
                                    <span><small class="text-muted">@Model.Attributes[i].Name</small></span>
                                </div>
                                <div>
                                    <span>@(Model.Attributes[i].Type == AttributeType.Bool ? (Model.Attributes[i].Value == "true" ? "TAK" : "NIE") : Model.Attributes[i].Value)  </span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade my-2" id="photos" role="tabpanel" aria-labelledby="photos-tab">
            @if (Model.Photos.Count > 0)
            {
                <div id="photosCarousel" class="carousel slide " data-ride="carousel">
                    <ol class="carousel-indicators">
                        @for (int i = 0; i < Model.Photos.Count; i++)
                        {
                            <li data-target="#photosCarousel" data-slide-to="@i" class="@(i == 0 ? "active" : "" ) "></li>
                        }
                    </ol>
                    <div class="carousel-inner">
                        @for (int i = 0; i < Model.Photos.Count; i++)
                        {
                            <div class="carousel-item  @(i == 0 ? "active" : "" ) ">
                                <img class="d-block w-100" src="@Url.Content(Model.Photos[i])" style="height: 50vh; object-fit: scale-down;" alt="">
                            </div>
                        }


                    </div>
                    <a class="carousel-control-prev" href="#photosCarousel" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon text-info" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#photosCarousel" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>

            }
            else
            {
                <h4 class="my-4">Brak zdjęć</h4>
            }
           
        </div>
    </div>

</div>
<div class="d-flex justify-content-between" >
    <a class="btn btn-outline-primary" asp-action="Index">Powrót</a>
    <a class="btn btn-outline-secondary" asp-action="Edit" asp-route-id="@Model.Id">Edytuj</a>   
</div>
<style>
    .carousel-control-prev-icon {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E") !important;
    }

    .carousel-control-next-icon {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E") !important;
    }
</style>
